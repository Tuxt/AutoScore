import datamanager2 as dm
dr000 = dm.load("history/test002_0.0-dr1_0.0-dr2_0.0-rnndrop")
dr001 = dm.load("history/test002_0.0-dr1_0.0-dr2_0.2-rnndrop")
dr010 = dm.load("history/test002_0.0-dr1_0.2-dr2_0.0-rnndrop")
dr011 = dm.load("history/test002_0.0-dr1_0.2-dr2_0.2-rnndrop")
dr100 = dm.load("history/test002_0.2-dr1_0.0-dr2_0.0-rnndrop")
dr101 = dm.load("history/test002_0.2-dr1_0.0-dr2_0.2-rnndrop")
dr110 = dm.load("history/test002_0.2-dr1_0.2-dr2_0.0-rnndrop")
dr111 = dm.load("history/test002_0.2-dr1_0.2-dr2_0.2-rnndrop")

from matplotlib import pyplot as plt

plt.subplot(121)
plt.axis([0,20,0.,3.2])
plt.title("Loss")
plt.xlabel("epochs")
plt.ylabel("loss")
plt.plot(dr000['loss'], 'b', label="Train Loss (no dropout)")
plt.plot(dr000['val_loss'], 'b--', label="Validation Loss (no dropout)")
plt.plot(dr001['loss'], 'g', label="Train Loss (recurrent dropout)")
plt.plot(dr001['val_loss'], 'g--', label="Validation Loss (recurrent dropout)")
plt.plot(dr010['loss'], 'r', label="Train Loss (subsequent dropout)")
plt.plot(dr010['val_loss'], 'r--', label="Validation Loss (subsequent dropout)")
plt.plot(dr011['loss'], 'c', label="Train Loss (recurrent and subsequent dropout)")
plt.plot(dr011['val_loss'], 'c--', label="Validation Loss (recurrent and subsequent dropout)")
plt.plot(dr100['loss'], 'm', label="Train Loss (previous dropout)")
plt.plot(dr100['val_loss'], 'm--', label="Validation Loss (previous dropout)")
plt.plot(dr101['loss'], 'y', label="Train Loss (recurrent and previous dropout)")
plt.plot(dr101['val_loss'], 'y--', label="Validation Loss (recurrent and previous dropout)")
plt.plot(dr110['loss'], 'k', label="Train Loss (previous and subsequent dropout)")
plt.plot(dr110['val_loss'], 'k--', label="Validation Loss (previous and subsequent dropout)")
plt.plot(dr111['loss'], color='#808080', label="Train Loss (all dropouts)")
plt.plot(dr111['val_loss'], color='#808080', linestyle='--', label="Validation Loss (all dropouts)")
plt.legend()


plt.subplot(122)
plt.axis([0,20,0,1])
plt.title("Accuracy")
plt.xlabel("epochs")
plt.ylabel("accuracy")
plt.plot(dr000['acc'], 'b', label="Train Accuracy (no dropout)")
plt.plot(dr000['val_acc'], 'b--', label="Validation Accuracy (no dropout)")
plt.plot(dr001['acc'], 'g', label="Train Accuracy (recurrent dropout)")
plt.plot(dr001['val_acc'], 'g--', label="Validation Accuracy (recurrent dropout)")
plt.plot(dr010['acc'], 'r', label="Train Accuracy (subsequent dropout)")
plt.plot(dr010['val_acc'], 'r--', label="Validation Accuracy (subsequent dropout)")
plt.plot(dr011['acc'], 'c', label="Train Accuracy (recurrent and subsequent dropout)")
plt.plot(dr011['val_acc'], 'c--', label="Validation Accuracy (recurrent and subsequent dropout)")
plt.plot(dr100['acc'], 'm', label="Train Accuracy (previous dropout)")
plt.plot(dr100['val_acc'], 'm--', label="Validation Accuracy (previous dropout)")
plt.plot(dr101['acc'], 'y', label="Train Accuracy (recurrent and previous dropout)")
plt.plot(dr101['val_acc'], 'y--', label="Validation Accuracy (recurrent and previous dropout)")
plt.plot(dr110['acc'], 'k', label='Train Accuracy (previous and subsequent dropout)')
plt.plot(dr110['val_acc'], 'k--', label="Validation Accuracy (previous and subsequent dropout)")
plt.plot(dr111['acc'], color='#808080', label='Train Accuracy (all dropouts)')
plt.plot(dr111['val_acc'], color='#808080', linestyle='--', label="Validation Accuracy (all dropouts)")
plt.legend()
plt.show()
